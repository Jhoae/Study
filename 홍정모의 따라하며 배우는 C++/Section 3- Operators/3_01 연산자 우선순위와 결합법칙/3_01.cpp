#include <iostream>

int main()
{
	using namespace std;
	
	int x = 4 * 2 / 3;

	int y = std::pow(2, 3);
	cout << y << endl;

	return 0;
}

/*

아래는 주어진 각 코드의 연산자 우선순위에 대한 설명입니다:

# 1. r = 1 + 2 + 3 * 4:

곱셈 연산자(*)의 우선순위가 덧셈 연산자(+)보다 높으므로 3 * 4가 먼저 계산됩니다.
그 후, 덧셈 연산자의 왼쪽에서 오른쪽으로 계산되므로 1 + 2가 먼저 계산됩니다.
마지막으로, 두 번째 덧셈 연산자를 사용하여 1 + 2 + (3 * 4)를 계산하고, 결과는 r에 할당됩니다.


# 2. a = b = c:

할당 연산자(=)는 오른쪽에서 왼쪽으로 결합합니다. 따라서, b = c가 먼저 실행됩니다.
그 후, a = b가 실행되고, b의 값이 a에 할당됩니다.


# 3. t /= --w + 5:

전위 감소 연산자(--)의 우선순위가 덧셈 연산자(+)보다 높으므로 --w가 먼저 실행됩니다.
그 후, 덧셈 연산자와 나눗셈 대입 연산자(/=)는 왼쪽에서 오른쪽으로 계산됩니다.
따라서, --w + 5를 계산하고, 그 결과를 t와 나누어진 결과를 t에 할당합니다.


# 4. a || b && c || d:

논리 AND 연산자(&&)의 우선순위가 논리 OR 연산자(||)보다 높으므로 b && c가 먼저 계산됩니다.
그 후, 논리 OR 연산자는 왼쪽에서 오른쪽으로 계산됩니다.
따라서, a || (b && c) || d의 결과가 반환됩니다.
이러한 연산자 우선순위 규칙을 이용하여, 각 코드의 연산을 적절한 순서대로 수행할 수 있습니다.

*/